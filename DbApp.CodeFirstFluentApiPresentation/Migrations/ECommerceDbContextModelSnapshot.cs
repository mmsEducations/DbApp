// <auto-generated />
using System;
using DbApp.CodeFirstFluentApiPresentation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbApp.CodeFirstFluentApiPresentation.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbApp.CodeFirstFluentApiPresentation.Data.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Elektronik"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Kitap"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Giyim"
                        });
                });

            modelBuilder.Entity("DbApp.CodeFirstFluentApiPresentation.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("DateTime2")
                        .HasColumnName("crea_date")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price")
                        .HasColumnOrder(3);

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CreaDate = new DateTime(2024, 7, 20, 21, 24, 50, 957, DateTimeKind.Local).AddTicks(4093),
                            IsActive = true,
                            Name = "İphone 15 pro max",
                            Price = 84.500m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            CreaDate = new DateTime(2024, 7, 20, 21, 24, 50, 957, DateTimeKind.Local).AddTicks(4110),
                            IsActive = true,
                            Name = "sahomi ultra x",
                            Price = 78m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            CreaDate = new DateTime(2024, 7, 15, 21, 24, 50, 957, DateTimeKind.Local).AddTicks(4112),
                            IsActive = true,
                            Name = "Yoldaki mühendis",
                            Price = 200m
                        });
                });

            modelBuilder.Entity("DbApp.CodeFirstFluentApiPresentation.Data.Entities.Product", b =>
                {
                    b.HasOne("DbApp.CodeFirstFluentApiPresentation.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DbApp.CodeFirstFluentApiPresentation.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
